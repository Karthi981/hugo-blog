[{"content":"Why Choose Deepseek AI? Deepseek AI is a free, open-source AI-powered chatbot that functions similarly to ChatGPT. It is known for its efficiency, lightweight deployment, and affordability, making it a great open-source alternative to ChatGPT. Key advantages include:\nAffordability: Free and open-source, making it accessible to everyone. Performance: Focuses on reasoning and explainability. Customizability: Models can be fine-tuned for various applications. Privacy: Can be run locally without data leaving your machine. Getting Started with Installation To run Deepseek AI locally, we need Ollama, a free and open-source tool designed for running large language models (LLMs) on personal computers with minimal effort.\nWhat is Ollama? Ollama enables users to run LLMs on their local machines with better control and privacy. It supports downloading Deepseek AI models and other available models with ease.\nStep 1: Install Ollama Download and install Ollama from the official website. The installation process is straightforward and requires no advanced technical skills.\nStep 2: Download Deepseek AI Models Once Ollama is installed, open Ollama or the command prompt and run the following command to download the Deepseek AI model:\nFor a 1.5 billion parameters model, use:\nollama run deepseek-r1:1.5b Troubleshooting Common Errors If you encounter the following error:\nError: Post \u0026#34;http://127.0.0.1:11434/api/show\u0026#34;: An existing connection was forcibly closed by the remote host. Make sure the Ollama server is running by executing:\nollama Additionally, check that:\nYou are running the command prompt or PowerShell as an administrator. The current directory has the necessary permissions to execute the command. Example: C:\\Users\\username\u0026gt; Since my GPU VRAM is limited to 6GB, I am using the 1.5B model, which consumes up to 3GB of VRAM.\nIf you want to download models with more parameters, refer to the official list here.\nStep 3: Verify Installation To check if the installation was successful, run:\nollama # Displays available commands ollama ps # Shows GPU VRAM and CPU usage Step 4: Running Deepseek AI Locally Once installed, you can start interacting with the model by running:\nollama run deepseek-r1:1.5b This command launches the AI model in the terminal. You can then enter messages, questions, or prompts, and Deepseek AI will generate responses accordingly.\nExploring Other Deepseek AI Models Deepseek AI offers models ranging from 1.5B to 671B parameters, depending on your system\u0026rsquo;s capabilities. If your GPU supports higher VRAM, you can install larger models for improved performance.\nThese models are licensed under the MIT License, meaning they support commercial use, modifications, and derivative works. Additionally, they can be used for distillation in developing other AI models.\nDeepseek AI Model Training \u0026amp; Explanation Deepseek AI models are trained on vast amounts of textual data, including books, articles, and websites. The AI is designed to generate human-like responses for a variety of use cases, making it a versatile tool for:\nContent creation Programming assistance Research support Customer service automation Final Thoughts Deepseek AI is an excellent alternative to proprietary AI chatbots. With its lightweight nature and customizable models, it offers a powerful tool for individuals and businesses alike. By following these simple steps, you can start running Deepseek AI on your PC in your smartphone.\nðŸ“Œ Additional Resources: Official Deepseek AI Library: Click Here Ollama Installation Guide: Click Here Deepseek AI GitHub Repository: Click Here ","permalink":"https://karthi981.github.io/hugo-blog/posts/deepseek-ai-run-locally/","summary":"\u003ch1 id=\"why-choose-deepseek-ai\"\u003eWhy Choose Deepseek AI?\u003c/h1\u003e\n\u003cp\u003eDeepseek AI is a free, open-source AI-powered chatbot that functions similarly to ChatGPT. It is known for its efficiency, lightweight deployment, and affordability, making it a great open-source alternative to ChatGPT. Key advantages include:\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003eAffordability\u003c/strong\u003e: Free and open-source, making it accessible to everyone.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePerformance\u003c/strong\u003e: Focuses on reasoning and explainability.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003eCustomizability\u003c/strong\u003e: Models can be fine-tuned for various applications.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ePrivacy\u003c/strong\u003e: Can be run locally without data leaving your machine.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"getting-started-with-installation\"\u003eGetting Started with Installation\u003c/h2\u003e\n\u003cp\u003eTo run Deepseek AI locally, we need \u003cstrong\u003eOllama\u003c/strong\u003e, a free and open-source tool designed for running large language models (LLMs) on personal computers with minimal effort.\u003c/p\u003e","title":"Deepseek AI: How to Run It Locally on Your PC in 10 Minutes"},{"content":"What is openwebui? OpenWebUI is a web interface for running OpenAI\u0026rsquo;s API locally. It allows you to interact with OpenAI\u0026rsquo;s API without having to install any software on your computer. You can use it to run your own chatbots, generate images, and more.\nHow to Run Deepseek AI Locally and run it in your smartphone via ngrok? To run Deepseek AI locally, follow these steps:\nInstall Docker: You can download and install Docker from the official website. Once installed, you can verify the installation by running the following command in your terminal: docker --version If any error occurs, when checking the version, try editing your environment variables with the PATH variable.Usually it should be resolved by adding C:/ProgramFiles/Docker/Docker/resources/binand C:\\ProgramData\\DockerDesktop\\version-bin to the PATH variable.\nSearch for edit environment variables and click on it.\nOn the Popup window, click on Environment Variables and click on Path under User Variables.And edit the PATH variable to include the path of Docker.\nC:/ProgramFiles/Docker/Docker/resources/bin C:\\ProgramData\\DockerDesktop\\version-bin Pull the OpenWebUI image using docker: docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main This should pull the OpenWebUI image from the GitHub repository and start the container.The -p flag specifies the port mapping, which in this case is 3000:8080. The \u0026ndash;add-host flag is used to map the host\u0026rsquo;s internal IP address to the container\u0026rsquo;s host.The -v flag is used to mount a volume from the host to the container. In this case, it is mounted to the open-webui directory in the container.\nNow the OpenWebUI container is running and you can access it at http://localhost:3000.\n3.Now you could see it running locally on your pc.\nHow to run Deepseek AI in your smartphone via ngrok? Install ngrok: You can download and install ngrok from the official website.You can login and see the commands required to install ngrok either using chocolatey/brew install for your operating system. Once installed, you can verify the installation by running the following command in your terminal: ngrok --version After login go to Getting started and copy the config command with your auth token. ngrok config add-authtoken \u0026lt;authtoken\u0026gt; Then the auth token will be saved in a Local directory of ngrok.\nNow run the following command to start the ngrok tunnel: ngrok http http://localhost:3000 Make sure that the port number is 3000 in which the openwebui is running.You can configure ports in docker desktop for the openwebui container.\nA link will be generated which will be used to access the openwebui in your smartphone. Congratulations! You have successfully run Deepseek AI locally and also run it in your smartphone via ngrok.\nðŸ“Œ Additional Resources: Official OpenWebUI Documentation: Click Here Official OpenWebUI GitHub Repository: Click Here ngrok Installation Guide: Click Here ","permalink":"https://karthi981.github.io/hugo-blog/posts/deepseek-ai-run-with-openwebui/","summary":"\u003ch2 id=\"what-is-openwebui\"\u003eWhat is openwebui?\u003c/h2\u003e\n\u003cp\u003eOpenWebUI is a web interface for running OpenAI\u0026rsquo;s API locally. It allows you to interact with OpenAI\u0026rsquo;s API without having to install any software on your computer. You can use it to run your own chatbots, generate images, and more.\u003c/p\u003e\n\u003ch2 id=\"how-to-run-deepseek-ai-locally-and-run-it-in-your-smartphone-via-ngrok\"\u003eHow to Run Deepseek AI Locally and run it in your smartphone via ngrok?\u003c/h2\u003e\n\u003cp\u003eTo run Deepseek AI locally, follow these steps:\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eInstall Docker: You can download and install Docker from the official website. Once installed, you can verify the installation by running the following command in your terminal:\u003c/li\u003e\n\u003c/ol\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003edocker --version\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eIf any error occurs, when checking the version, try editing your environment variables with the PATH variable.Usually it should be resolved by adding \u003ccode\u003eC:/ProgramFiles/Docker/Docker/resources/bin\u003c/code\u003eand \u003ccode\u003eC:\\ProgramData\\DockerDesktop\\version-bin\u003c/code\u003e to the PATH variable.\u003c/p\u003e","title":"Deepseek AI: How to Run It Locally on Your PC with OpenWebUI and also use it in your smartphone?"},{"content":"Hugo Deployment: Via GitHub Pages and Workflows Hugo is a powerful static site generator that allows you to create fast, customizable websites with ease. In this guide, weâ€™ll walk through installing Hugo, setting up the PaperMod theme, and deploying your site to GitHub Pages using GitHub Actions.\n1. Deploy to GitHub Pages Step 0: Create a new branch in the repository Before setting up GitHub Actions, manually add the gh-pages branch to your repository. Otherwise, GitHub Actions will throw an error when trying to deploy.\nGo to your GitHub repository. Click on Branches and create a new branch named gh-pages. Allow read and write permissions under Settings \u0026gt; Actions \u0026gt; General \u0026gt; Workflow permissions. Example Screenshot: (Upload an image here showing the Actions tab in repository settings with read \u0026amp; write permissions enabled.)\nStep 1: Configure GitHub Actions to Publish to GitHub Pages Initialize the Repository (If Not Already Done) Run the following commands to initialize your repository and push it to GitHub:\necho \u0026#34;# README\u0026#34; \u0026gt;\u0026gt; README.md git add README.md git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin \u0026lt;path_to_your_git_repo\u0026gt; git push -u origin main Step 2: Create the GitHub Actions Workflow To automate the deployment process, create a workflow file:\nIn your repository, navigate to .github/workflows/ (create these directories if they donâ€™t exist). Create a new file named deploy.yml. Add the following workflow configuration: name: Publish to GH Pages on: push: branches: - main pull_request: jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout Repository uses: actions/checkout@v4 with: submodules: recursive # Ensures submodules like themes are included fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: \u0026#39;latest\u0026#39; extended: true - name: Build Site run: hugo --minify - name: Deploy to GitHub Pages if: github.ref == \u0026#39;refs/heads/main\u0026#39; uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.GITHUB_TOKEN }} publish_dir: ./public commit_message: \u0026#34;Automated deployment: $(date -u +\u0026#39;%Y-%m-%d %H:%M:%S\u0026#39;)\u0026#34; force_orphan: true Step 3: Enable GitHub Pages Go to your GitHub repository. Navigate to Settings \u0026gt; Pages. Under Branch, select gh-pages and click Save. How This Workflow Works Trigger: Runs on every push to main and on pull requests. Checkout Repository: Retrieves the repository code, including submodules (like themes). Setup Hugo: Installs Hugoâ€™s latest extended version. Build Site: Runs Hugo to generate the static site. Deploy: Publishes the built site to the gh-pages branch using peaceiris/actions-gh-pages. GitHub Pages Settings: The publish_dir: ./public ensures only the public directory is deployed. Final Notes Ensure that GITHUB_TOKEN is available in Settings \u0026gt; Secrets and variables \u0026gt; Actions. If deployment fails, check Actions \u0026gt; Workflows \u0026gt; Deploy logs. Your site will be live at https://\u0026lt;your-username\u0026gt;.github.io/\u0026lt;your-repo\u0026gt;. This setup enables continuous deployment, ensuring your Hugo site is always updated on GitHub Pages after every commit. And you can easily update your site by pushing to the main branch. so you don\u0026rsquo;t have to worry about manually updating the gh-pages branch.\nEvery time you push to the main branch, GitHub Actions will automatically deploy your site to GitHub Pages by installing Hugo, building your site, and publishing it to the gh-pages branch using the peaceiris/actions-gh-pages action.\nBy following these steps, you can efficiently deploy your Hugo site to GitHub Pages using automated workflows!\n","permalink":"https://karthi981.github.io/hugo-blog/posts/github-action/","summary":"\u003ch1 id=\"hugo-deployment-via-github-pages-and-workflows\"\u003eHugo Deployment: Via GitHub Pages and Workflows\u003c/h1\u003e\n\u003cp\u003eHugo is a powerful static site generator that allows you to create fast, customizable websites with ease. In this guide, weâ€™ll walk through installing Hugo, setting up the PaperMod theme, and deploying your site to GitHub Pages using GitHub Actions.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-deploy-to-github-pages\"\u003e1. Deploy to GitHub Pages\u003c/h2\u003e\n\u003ch3 id=\"step-0-create-a-new-branch-in-the-repository\"\u003e\u003cstrong\u003eStep 0: Create a new branch in the repository\u003c/strong\u003e\u003c/h3\u003e\n\u003cp\u003eBefore setting up GitHub Actions, manually add the \u003ccode\u003egh-pages\u003c/code\u003e branch to your repository. Otherwise, GitHub Actions will throw an error when trying to deploy.\u003c/p\u003e","title":"Hugo Deployment: Via Github pages and workflows"},{"content":"Hugo Made Easy: Install, Theme: PaperMod Hugo is a powerful static site generator that allows you to create fast, customizable websites with ease. In this guide, weâ€™ll walk through installing Hugo, setting up the PaperMod theme, and running the site locally.\n1. Install Hugo (Extended Version) Windows Using Chocolatey (Recommended) choco install hugo-extended -y Manual Installation Download the latest Hugo Extended version from GitHub Releases. Extract the archive and place hugo.exe in a folder within your system PATH (e.g., C:\\Program Files\\Hugo). Verify installation: hugo version MacOS brew install hugo Linux (Debian/Ubuntu) sudo apt update \u0026amp;\u0026amp; sudo apt install hugo Verify the installation:\nhugo version Ensure you see Extended in the version output.\n2. Create a New Hugo Site hugo new site myblog cd myblog Replace myblog with your desired project name.\n3. Install the PaperMod Theme git init git submodule add https://github.com/adityatelange/hugo-PaperMod themes/PaperMod Or download the theme from GitHub and place it in the themes/PaperMod directory.\n4. Configure hugo.toml Open hugo.toml and add:\nNote : You can also configure the theme in the config.toml file in previous versions of Hugo.\nbaseURL = \u0026#39;https://yourgithubusername.github.io/\u0026#39; languageCode = \u0026#39;en-us\u0026#39; title = \u0026#39;My Hugo Blog\u0026#39; theme = \u0026#39;PaperMod\u0026#39; [params] ShowReadingTime = true ShowToc = true TocOpen = true Modify the baseURL with your actual GitHub username namely https://username.github.io/.\n5. Create Your First Blog Post hugo new posts/first-post.md Edit content/posts/first-post.md and add:\n--- title: \u0026#39;My First Hugo Post\u0026#39; date: 2025-01-30T12:30:00Z draft: false --- Welcome to my Hugo blog! This is my first post. 6. Run Hugo Locally hugo server -D Visit http://localhost:1313/ to preview your site.\n","permalink":"https://karthi981.github.io/hugo-blog/posts/hugo-setup/","summary":"\u003ch1 id=\"hugo-made-easy-install-theme-papermod\"\u003eHugo Made Easy: Install, Theme: PaperMod\u003c/h1\u003e\n\u003cp\u003eHugo is a powerful static site generator that allows you to create fast, customizable websites with ease. In this guide, weâ€™ll walk through installing Hugo, setting up the PaperMod theme, and running the site locally.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"1-install-hugo-extended-version\"\u003e1. Install Hugo (Extended Version)\u003c/h2\u003e\n\u003ch3 id=\"windows\"\u003e\u003cstrong\u003eWindows\u003c/strong\u003e\u003c/h3\u003e\n\u003ch4 id=\"using-chocolatey-recommended\"\u003e\u003cstrong\u003eUsing Chocolatey (Recommended)\u003c/strong\u003e\u003c/h4\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003echoco install hugo-extended -y\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch4 id=\"manual-installation\"\u003e\u003cstrong\u003eManual Installation\u003c/strong\u003e\u003c/h4\u003e\n\u003col\u003e\n\u003cli\u003eDownload the latest \u003cstrong\u003eHugo Extended\u003c/strong\u003e version from \u003ca href=\"https://github.com/gohugoio/hugo/releases\"\u003eGitHub Releases\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003eExtract the archive and place \u003ccode\u003ehugo.exe\u003c/code\u003e in a folder within your system PATH (e.g., \u003ccode\u003eC:\\Program Files\\Hugo\u003c/code\u003e).\u003c/li\u003e\n\u003cli\u003eVerify installation:\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-powershell\" data-lang=\"powershell\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"macos\"\u003e\u003cstrong\u003eMacOS\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ebrew install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch3 id=\"linux-debianubuntu\"\u003e\u003cstrong\u003eLinux (Debian/Ubuntu)\u003c/strong\u003e\u003c/h3\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-sh\" data-lang=\"sh\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo apt update \u003cspan style=\"color:#f92672\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sudo apt install hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eVerify the installation:\u003c/p\u003e","title":"Hugo Made Easy: Install, Theme:PaperMod"}]